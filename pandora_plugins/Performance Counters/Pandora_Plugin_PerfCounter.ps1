# Plugin for monitoring Performance Counters.

# Pandora FMS Agent Plugin for Microsoft Performance Counters Monitoring
# (c) Tomás Palacios <tomas.palacios@artica.es> 2012
# v1.1, 02 Aug 2012 - 21:40:00
# ------------------------------------------------------------------------

# Configuration Parameters

param ([string]$list = "list")

$host.UI.RawUI.BufferSize = new-object System.Management.Automation.Host.Size(512,50);

	if ($list -eq "list") { 

		echo "`nPandora FMS Agent Plugin for Microsoft Performance Counters Monitoring`n"

		echo "(c) Tomás Palacios <tomas.palacios@artica.es> 2012	v1.1, 02 Aug 2012 - 20:40:00`n"

		echo "Parameters:`n"

		echo "	-list	Provides an absolute path to a list of counters to monitor`n"

		echo "Usage example: .\Pandora_Plugin_PerfCounter_v1.0.ps1 -list C:\'Program Files (x86)\pandora_agent\util\counters.txt' 2> plugin_error.log`n"
	}

	else {

#############################CODE BEGINS HERE###############################

# Función para sacar los módulos en formato XML en el output

	function print_module {

		param ([string]$module_name,[string]$module_type,[string]$module_value,[string]$module_description)

		echo "<module>"
		echo "<name><![CDATA[$module_name]]></name>"
		echo "<type><![CDATA[$module_type]]></type>"
		echo "<description>"
		echo "<![CDATA[$module_description]]>"
		echo "</description>"
		echo "<data><![CDATA[$module_value]]></data>"
		echo "</module>"

	}


# Recolección de los contadores especificados en la lista
if ($list -eq "none" ) {

	$a=get-counter

}

else {

	$a=get-counter -Counter (get-content $list)

}

	$a.countersamples | select-object -Property * | 

	foreach-object {

		$countername = $_.Path

		$value = $_.CookedValue

		print_module "PerfCounter $countername" "generic_data" "$value" "Performance Counter module generated by agent plugin"

	}

}
